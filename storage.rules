rules_version = '2';
service firebase.storage {
  match /b/{bucket}/o {
    // Allow public read access to all files
    match /{allPaths=**} {
      allow read: if true;
    }
    
    // User profile pictures - only the owner can upload/update/delete
    match /profilePictures/{userId}/{fileName} {
      allow read: if true;
      allow create: if request.auth != null && request.auth.uid == userId;
      allow update: if request.auth != null && request.auth.uid == userId;
      allow delete: if request.auth != null && request.auth.uid == userId;
      
      // Validate file type and size
      allow write: if 
        request.auth != null && 
        request.auth.uid == userId &&
        request.resource.contentType.matches('image/.*') &&
        request.resource.size < 5 * 1024 * 1024; // 5MB limit
    }
    
    // Post images - any authenticated user can upload, but only the owner can update/delete
    match /posts/{postId}/{fileName} {
      allow read: if true;
      allow create: if request.auth != null;
      allow update, delete: if request.auth != null && 
        request.resource.metadata.ownerId == request.auth.uid;
      
      // Validate file type and size
      allow write: if 
        request.auth != null &&
        request.resource.contentType.matches('image/.*') &&
        request.resource.size < 10 * 1024 * 1024; // 10MB limit
    }
    
    // User documents - private to each user
    match /users/{userId}/documents/{documentId} {
      allow read: if request.auth != null && request.auth.uid == userId;
      allow create, update, delete: if request.auth != null && request.auth.uid == userId;
      
      // Validate file type and size
      allow write: if 
        request.auth != null && 
        request.auth.uid == userId &&
        request.resource.contentType.matches('application/.*') &&
        request.resource.size < 10 * 1024 * 1024; // 10MB limit
    }
    
    // General uploads (restricted to authenticated users)
    match /uploads/{userId}/{fileName} {
      allow read: if true;
      allow write: if request.auth != null && request.auth.uid == userId;
    }
  }
}
